---
title: "Penguins EDA"
format:
  html:
    code-fold: true
---

## Penguin Size and Mass by Sex and Species

```{r}
#| message: false
#| warning: false 
library(tidymodels)
library(xgboost)  
library(discrim)
library(palmerpenguins)
library(dplyr)
library(ggplot2)

df <- palmerpenguins::penguins
theme_set(theme_classic())
tidymodels_prefer()
```

```{r}
?palmerpenguins::penguins
```

```{r}
df %>%
  group_by(species, sex) %>%
  summarise(
    across(
      where(is.numeric), 
      \(x) mean(x, na.rm = TRUE)
      )
    ) %>%
  knitr::kable()
```

## Penguin Size vs Mass by Species

```{r}
df %>%
  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +
  geom_point() + 
  geom_smooth(method = "lm")
```

```{r}
lm_spec <- linear_reg() |>
  set_mode("regression") |>
  set_engine("lm")

lm_fit <- lm_spec |>
  fit(body_mass_g ~ ., data = df)

tidy(lm_fit)
glance(lm_fit)

lm_fit |>
  extract_fit_engine() |>
  plot()
```

```{r}
penguins_split <- initial_split(df, prop = 0.8)
penguins_train <- training(penguins_split)
penguins_test <- testing(penguins_split)

lda_spec <- discrim_linear() |>
  set_mode("classification") |>
  set_engine("MASS")

lda_fit <- lda_spec |>
  fit(species ~ body_mass_g, data = penguins_train)

lda_fit_preds_test <- augment(lda_fit , new_data = penguins_test) |>
  select(species, body_mass_g, .pred_class, .pred_Adelie, .pred_Chinstrap, .pred_Gentoo)

lr_metrics <- metric_set(accuracy, sensitivity, specificity, ppv)

lda_fit_preds_test |>
  lr_metrics(truth = species, estimate = .pred_class, event_level = "second")
```

```{r}
boost_spec <- boost_tree(trees = 5000, tree_depth = 4) %>%
  set_engine("xgboost") %>%
  set_mode("classification")

boost_fit <- boost_spec |>
  fit(species ~ body_mass_g, data = penguins_train)

augment(boost_fit, new_data = penguins_test) |>
  accuracy(truth = species, estimate = .pred_class)
```

```{r}
set.seed(2112) 
penguins_folds <- vfold_cv(df, v = 5) 

#| cache: true
lm_spec %>%   
  fit_resamples(body_mass_g ~ species, resamples = penguins_folds, 
                metrics = metric_set(rmse, rsq)) %>%   
  collect_metrics()
```

```{r}
library(dbplyr)
con <- DBI::dbConnect(duckdb::duckdb(), dbdir = "my-db.duckdb")
DBI::dbWriteTable(con, "penguins", palmerpenguins::penguins, overwrite = TRUE)

con <- DBI::dbConnect(
  duckdb::duckdb(), 
  dbdir = "my-db.duckdb"
  )
df <- dplyr::tbl(con, "penguins")

df %>%
  group_by(species, sex) %>%
  summarise(
    across(
        ends_with("mm") | ends_with("g"),
      \(x) mean(x, na.rm = TRUE)
      )
    ) %>%
  dplyr::collect() %>%
  knitr::kable()

DBI::dbDisconnect(con, shutdown = TRUE)
```
