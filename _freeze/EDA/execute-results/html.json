{
  "hash": "2b2c7db6fec3132a724f93a7e1272db7",
  "result": {
    "markdown": "---\ntitle: \"Penguins EDA\"\nformat:\n  html:\n    code-fold: true\n---\n\n\n## Penguin Size and Mass by Sex and Species\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidymodels)\nlibrary(xgboost)  \nlibrary(discrim)\nlibrary(palmerpenguins)\nlibrary(dplyr)\nlibrary(ggplot2)\n\ndf <- palmerpenguins::penguins\ntheme_set(theme_classic())\ntidymodels_prefer()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n?palmerpenguins::penguins\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nstarting httpd help server ... done\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  group_by(species, sex) %>%\n  summarise(\n    across(\n      where(is.numeric), \n      \\(x) mean(x, na.rm = TRUE)\n      )\n    ) %>%\n  knitr::kable()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n|species   |sex    | bill_length_mm| bill_depth_mm| flipper_length_mm| body_mass_g|     year|\n|:---------|:------|--------------:|-------------:|-----------------:|-----------:|--------:|\n|Adelie    |female |       37.25753|      17.62192|          187.7945|    3368.836| 2008.055|\n|Adelie    |male   |       40.39041|      19.07260|          192.4110|    4043.493| 2008.055|\n|Adelie    |NA     |       37.84000|      18.32000|          185.6000|    3540.000| 2007.000|\n|Chinstrap |female |       46.57353|      17.58824|          191.7353|    3527.206| 2007.971|\n|Chinstrap |male   |       51.09412|      19.25294|          199.9118|    3938.971| 2007.971|\n|Gentoo    |female |       45.56379|      14.23793|          212.7069|    4679.741| 2008.069|\n|Gentoo    |male   |       49.47377|      15.71803|          221.5410|    5484.836| 2008.066|\n|Gentoo    |NA     |       45.62500|      14.55000|          215.7500|    4587.500| 2008.400|\n:::\n:::\n\n\n## Penguin Size vs Mass by Species\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + \n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](EDA_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_spec <- linear_reg() |>\n  set_mode(\"regression\") |>\n  set_engine(\"lm\")\n\nlm_fit <- lm_spec |>\n  fit(body_mass_g ~ ., data = df)\n\ntidy(lm_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 5\n   term              estimate std.error statistic  p.value\n   <chr>                <dbl>     <dbl>     <dbl>    <dbl>\n 1 (Intercept)        84088.   41912.       2.01  4.57e- 2\n 2 speciesChinstrap    -283.      88.8     -3.18  1.60e- 3\n 3 speciesGentoo        891.     145.       6.16  2.12e- 9\n 4 islandDream          -21.2     58.4     -0.363 7.17e- 1\n 5 islandTorgersen      -58.8     60.9     -0.966 3.35e- 1\n 6 bill_length_mm        19.0      7.11     2.67  8.05e- 3\n 7 bill_depth_mm         60.8     20.0      3.04  2.56e- 3\n 8 flipper_length_mm     18.5      3.13     5.91  8.46e- 9\n 9 sexmale              379.      48.1      7.88  4.95e-14\n10 year                 -42.8     20.9     -2.04  4.19e- 2\n```\n:::\n\n```{.r .cell-code}\nglance(lm_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 12\n  r.squared adj.r.squared sigma statistic   p.value    df logLik   AIC   BIC\n      <dbl>         <dbl> <dbl>     <dbl>     <dbl> <dbl>  <dbl> <dbl> <dbl>\n1     0.877         0.873  287.      255. 4.09e-141     9 -2351. 4725. 4767.\n# ℹ 3 more variables: deviance <dbl>, df.residual <int>, nobs <int>\n```\n:::\n\n```{.r .cell-code}\nlm_fit |>\n  extract_fit_engine() |>\n  plot()\n```\n\n::: {.cell-output-display}\n![](EDA_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](EDA_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](EDA_files/figure-html/unnamed-chunk-5-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](EDA_files/figure-html/unnamed-chunk-5-4.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins_split <- initial_split(df, prop = 0.8)\npenguins_train <- training(penguins_split)\npenguins_test <- testing(penguins_split)\n\nlda_spec <- discrim_linear() |>\n  set_mode(\"classification\") |>\n  set_engine(\"MASS\")\n\nlda_fit <- lda_spec |>\n  fit(species ~ body_mass_g, data = penguins_train)\n\nlda_fit_preds_test <- augment(lda_fit , new_data = penguins_test) |>\n  select(species, body_mass_g, .pred_class, .pred_Adelie, .pred_Chinstrap, .pred_Gentoo)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in FUN(newX[, i], ...): no non-missing arguments to min; returning Inf\nWarning in FUN(newX[, i], ...): no non-missing arguments to min; returning Inf\n```\n:::\n\n```{.r .cell-code}\nlr_metrics <- metric_set(accuracy, sensitivity, specificity, ppv)\n\nlda_fit_preds_test |>\n  lr_metrics(truth = species, estimate = .pred_class, event_level = \"second\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n  .metric     .estimator .estimate\n  <chr>       <chr>          <dbl>\n1 accuracy    multiclass     0.721\n2 sensitivity macro          0.588\n3 specificity macro          0.821\n4 ppv         macro         NA    \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nboost_spec <- boost_tree(trees = 5000, tree_depth = 4) %>%\n  set_engine(\"xgboost\") %>%\n  set_mode(\"classification\")\n\nboost_fit <- boost_spec |>\n  fit(species ~ body_mass_g, data = penguins_train)\n\naugment(boost_fit, new_data = penguins_test) |>\n  accuracy(truth = species, estimate = .pred_class)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  <chr>    <chr>          <dbl>\n1 accuracy multiclass     0.725\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(2112) \npenguins_folds <- vfold_cv(df, v = 5) \n\n#| cache: true\nlm_spec %>%   \n  fit_resamples(body_mass_g ~ species, resamples = penguins_folds, \n                metrics = metric_set(rmse, rsq)) %>%   \n  collect_metrics()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 6\n  .metric .estimator    mean     n std_err .config             \n  <chr>   <chr>        <dbl> <int>   <dbl> <chr>               \n1 rmse    standard   464.        5 11.8    Preprocessor1_Model1\n2 rsq     standard     0.674     5  0.0144 Preprocessor1_Model1\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dbplyr)\ncon <- DBI::dbConnect(duckdb::duckdb(), dbdir = \"my-db.duckdb\")\nDBI::dbWriteTable(con, \"penguins\", palmerpenguins::penguins, overwrite = TRUE)\n\ncon <- DBI::dbConnect(\n  duckdb::duckdb(), \n  dbdir = \"my-db.duckdb\"\n  )\ndf <- dplyr::tbl(con, \"penguins\")\n\ndf %>%\n  group_by(species, sex) %>%\n  summarise(\n    across(\n        ends_with(\"mm\") | ends_with(\"g\"),\n      \\(x) mean(x, na.rm = TRUE)\n      )\n    ) %>%\n  dplyr::collect() %>%\n  knitr::kable()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by \"species\". You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n|species   |sex    | bill_length_mm| bill_depth_mm| flipper_length_mm| body_mass_g|\n|:---------|:------|--------------:|-------------:|-----------------:|-----------:|\n|Adelie    |NA     |       37.84000|      18.32000|          185.6000|    3540.000|\n|Adelie    |female |       37.25753|      17.62192|          187.7945|    3368.836|\n|Adelie    |male   |       40.39041|      19.07260|          192.4110|    4043.493|\n|Chinstrap |female |       46.57353|      17.58824|          191.7353|    3527.206|\n|Chinstrap |male   |       51.09412|      19.25294|          199.9118|    3938.971|\n|Gentoo    |NA     |       45.62500|      14.55000|          215.7500|    4587.500|\n|Gentoo    |female |       45.56379|      14.23793|          212.7069|    4679.741|\n|Gentoo    |male   |       49.47377|      15.71803|          221.5410|    5484.836|\n:::\n\n```{.r .cell-code}\nDBI::dbDisconnect(con, shutdown = TRUE)\n```\n:::\n",
    "supporting": [
      "EDA_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}